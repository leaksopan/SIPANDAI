rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // File collection rules - allow all authenticated users to read, write, delete
    // Validation will be handled in application code
    match /files/{fileId} {
      allow read: if request.auth != null;
      allow write, delete: if request.auth != null;
      allow create: if request.auth != null;
    }
    
    // Folder collection rules - allow all authenticated users to read, write, delete
    // Validation will be handled in application code
    match /folders/{folderId} {
      allow read: if request.auth != null;
      allow write, delete: if request.auth != null;
      allow create: if request.auth != null;
    }
    
    // Users collection rules - users can access their own profile data
    match /users/{userId} {
      // Users can read and update their own profile
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow user creation for new registrations
      allow create: if request.auth != null && request.auth.uid == userId;
    }
    
    // Staff applications collection
    match /staff_applications/{applicationId} {
      allow read, write, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Test collection untuk debugging
    match /test/{testId} {
      allow read, write, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Extended fallback rule for other collections (extended to 2026)
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2026, 12, 31);
    }
  }
}
